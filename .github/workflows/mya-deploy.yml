# This is a basic workflow to help you get started with Actions

name: Deploy to ECR

# Controls when the workflow will run
on: push
  # Triggers the workflow on push or pull request events but only for the master branch

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest
    container:
      image: docker:latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    - name: Check out code
      uses: actions/checkout@v2

    #- name: Install docker
    #  run: brew install docker
    #- name: Set up AWS CLI
    #  run: |
    #    apt-get update
    #    apt-get install -y awscli
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    #- name: Login to Amazon ECR
      #id: login-ecr
      #uses: aws-actions/amazon-ecr-login@v1
    - name: Login to Amazon ECR
      run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 124888308272.dkr.ecr.us-east-1.amazonaws.com



    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: 124888308272.dkr.ecr.us-east-1.amazonaws.com
        ECR_REPOSITORY: docker_nodejs_demo
        IMAGE_TAG: nodejs_demo_image
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    - name: Log out of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
